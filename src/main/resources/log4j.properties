# Loggers :日志记录器，控制日志的输出级别和日志是否输出
# Appenders：输出端，指定日志的输出方式（比如到控制台、文件、远程服务器、数据库等）
# Layout：控制日志信息的输出格式
#   日志级别：
#   OFF	    最高日志级别，关闭所有日志
#   FATAL	将会导致应用程序退出的错误
#   ERROR	发生错误事件，但仍不影响系统的继续运行
#   WARN	警告，即潜在的错误情形
#   INFO	一般用于粗粒度级别上，强调应用程序的运行全程
#   DEBUG	一般用于细粒度级别上，对调试应用程序非常有帮助
#   ALL	    最低等级，打开所有日志记录
# 常用Error、Warn、INFO、Debug四种

### 根设置###
# 用于设置制定级别以上的日志输出到指定输出端,名字和个数可以任意，但是需要和后面的设置对应。
# 输出DEBUG级别以上的日志到控制台和文件
log4j.rootLogger=DEBUG,console,file

### 输出到控制台的相关设置 ###
# 调用ConcoleAppender类，输出到控制台
log4j.appender.console=org.apache.log4j.ConsoleAppender
# 默认值是System.out
log4j.appender.console.Target=System.out
# 指定日志的最低输出级别，默认是DEBUG
log4j.appender.console.Threshold=DEBUG
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=[%c]-%m%n

### 输出到文件的相关设置 ###
# 调用RollingFileAppender，文件大小到达指定尺寸的时候产生一个新文件
log4j.appender.file=org.apache.log4j.RollingFileAppender
# 输出到指定文件
log4j.appender.file.File=./log/kang.log
# 默认为true，表示添加到末尾，如果是false则表示覆盖
log4j.appender.file.Append=true
# 设置单个日志文件大小。KB、MB、GB
log4j.appender.file.MaxFileSize=10MB
log4j.appender.file.Threshold=DEBUG
# PatternLayout，灵活指定布局模式
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[%p][%d{yy-MM-dd}][%c]%m%n

### 日志输出级别 ###
log4j.logger.org.mybatis=DEBUG
log4j.logger.java.sql=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.ResultSet=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG